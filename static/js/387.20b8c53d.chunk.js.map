{"version":3,"file":"static/js/387.20b8c53d.chunk.js","mappings":"+PAEaA,EAAYC,EAAAA,EAAAA,IAAF,oEAKVC,EAAUD,EAAAA,EAAAA,GAAF,gEAKRE,EAAYF,EAAAA,EAAAA,GAAF,gIAOVG,EAAaH,EAAAA,EAAAA,EAAH,iGAMVI,EAAgBJ,EAAAA,EAAAA,GAAH,iDAIbK,EAAiBL,EAAAA,EAAAA,EAAH,wB,SCW3B,MAhCA,WACI,IAAQM,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACZ,WAAAC,EAAAA,EAAAA,IAAeN,UAAf,SAAoBO,KAAKH,EAC5B,GAAE,CAACJ,KAGA,SAACP,EAAD,WACI,SAACE,EAAD,UACwB,KAAb,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQK,SACL,SAACX,EAAD,UAAY,8CADf,OAGGM,QAHH,IAGGA,OAHH,EAGGA,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASX,EAApB,EAAoBA,GAApB,OACR,UAACJ,EAAD,YACI,UAACE,EAAD,WAAe,WAASY,MACxB,UAACX,EAAD,WAAgB,IAAEY,OAFLX,EADT,OAU/B,C,kMC9BYY,EAAO,kBCKb,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACoBC,EAAAA,EAAAA,GAAM,oBAD1B,cACGC,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlB,GAA/B,wFACoBc,EAAAA,EAAAA,GAAM,SAAD,OAAUd,GAAM,CACxCmB,OACA,CACIC,SAAUR,EACVS,KAAM,KALX,cACGN,EADH,yBAQIA,EAASC,MARb,kEAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,wFACoBc,EAAAA,EAAAA,GAAM,SAAD,OACfd,EADe,YACD,CACvBmB,OACA,CACIC,SAAUR,KALf,cACGG,EADH,yBASIA,EAASC,KAAKO,MATlB,kEAYA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BN,GAA9B,wFACoBc,EAAAA,EAAAA,GAAM,SAAD,OACfd,EADe,YACD,CACvBmB,OACA,CACIC,SAAUR,EACVS,KAAM,KANX,cACGN,EADH,yBAUIA,EAASC,KAAKC,SAVlB,kEAaA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,wFACoBX,EAAAA,EAAAA,GAAM,iBACP,CAClBK,OACA,CACIO,MAAOD,EACPJ,KAAM,KANX,cACGN,EADH,yBAUIA,EAASC,KAAKC,SAVlB,kEA5CPH,EAAAA,EAAAA,SAAAA,QDHwB,gCCIxBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBDLqB,sN","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/constans.js","components/services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewWrap= styled.div`\n    margin-top: 40px;\n    display: block;\n`;\n\nexport const ReviewUL= styled.ul`\n    list-style: none;\n    padding: 0;\n`;\n\nexport const ReviewText= styled.li`\n    margin-bottom: 10px;\n    padding: 20px;\n    border: 1px solid #e0e0e0;\n    border-radius: 15px;\n`;\n\nexport const ReviewInfo = styled.p`\n    color: gray;\n    font-weight: 700;\n    text-transform: uppercase;\n`;\n\nexport const ReviewsAuthor = styled.h3`\n    margin-bottom: 20px\n`;\n\nexport const ReviewsComment = styled.p`\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getReviewMovie } from 'components/services/api';\n\nimport { ReviewInfo, ReviewsAuthor, ReviewsComment, ReviewText, ReviewUL, ReviewWrap } from './Reviews.styled';\n\nfunction Reviews() {\n    const { id } = useParams();\n    const [review, setReview] = useState(null);\n\n    useEffect(() => {\n        getReviewMovie(id)?.then(setReview);\n    }, [id]);\n\n    return (\n        <ReviewWrap>\n            <ReviewUL>\n                {review?.length === 0 ? (\n                    <ReviewInfo>We don't have any reviews for this movies</ReviewInfo>\n                ) : (\n                    review?.map(({ author, content, id }) => (\n                        <ReviewText key={id}>\n                            <ReviewsAuthor>Author: {author}</ReviewsAuthor>\n                            <ReviewsComment> {content}</ReviewsComment>\n                        </ReviewText>\n                    ))\n                )}\n            </ReviewUL>\n        </ReviewWrap>\n    );\n}\n\nReviews.propTypes = {\n    width: PropTypes.number,\n    url: PropTypes.string,\n    name: PropTypes.string,\n};\n\nexport default Reviews;","export const TOKEN = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZjQ5NzM5ZTEwYTU3YTliZjAyNGU0Y2JkYTdiZGQyMCIsInN1YiI6IjY0NmNhNDFkMzNhMzc2MDExZWM1NzZiYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.l7wd1ErHz9MLKun2tiW2sFEdmte5xSXYfQzmnx_8WvI\"\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const LANG = '&language=en-US';","import axios from 'axios';\nimport { BASE_URL, LANG, TOKEN } from './constans';\n\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.common['Authorization'] = `Bearer ${TOKEN}`;\n\nexport async function getTrendsMovies() {\n    const response = await axios(`trending/all/day`);\n    return response.data.results;\n}\n\nexport async function getDetailsMovie(id) {\n    const response = await axios(`movie/${id}`, {\n        params:\n        {\n            language: LANG,\n            page: 1,\n        }\n    });\n    return response.data;\n}\n\nexport async function getCreditsMovie(id) {\n    const response = await axios(\n        `movie/${id}/credits`, {\n        params:\n        {\n            language: LANG,\n        }\n    }\n    );\n    return response.data.cast;\n}\n\nexport async function getReviewMovie(id) {\n    const response = await axios(\n        `movie/${id}/reviews`, {\n        params:\n        {\n            language: LANG,\n            page: 1,\n        }\n    }\n    );\n    return response.data.results;\n}\n\nexport async function getMovies(q) {\n    const response = await axios(\n        `search/keyword`, {\n        params:\n        {\n            query: q,\n            page: 1,\n        }\n    }\n    );\n    return response.data.results;\n}\n"],"names":["ReviewWrap","styled","ReviewUL","ReviewText","ReviewInfo","ReviewsAuthor","ReviewsComment","id","useParams","useState","review","setReview","useEffect","getReviewMovie","then","length","map","author","content","LANG","getTrendsMovies","axios","response","data","results","getDetailsMovie","params","language","page","getCreditsMovie","cast","getMovies","q","query"],"sourceRoot":""}