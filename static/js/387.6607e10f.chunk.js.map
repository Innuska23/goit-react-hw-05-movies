{"version":3,"file":"static/js/387.6607e10f.chunk.js","mappings":"yPAEaA,EAAYC,EAAAA,EAAAA,IAAF,6CAIVC,EAAUD,EAAAA,EAAAA,GAAF,8DAIRE,EAAYF,EAAAA,EAAAA,GAAF,uI,SC+BvB,MAjCA,WACI,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACZ,WAAAC,EAAAA,EAAAA,IAAeN,UAAf,SAAoBO,KAAKH,EAC5B,GAAE,CAACJ,EAAD,OAAKG,QAAL,IAAKA,OAAL,EAAKA,EAAQK,UAGZ,UAACZ,EAAD,YACI,mBAEA,SAACE,EAAD,UACwB,KAAb,OAANK,QAAM,IAANA,OAAA,EAAAA,EAAQK,SACL,uBAAG,8CADN,OAGGL,QAHH,IAGGA,OAHH,EAGGA,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASX,EAApB,EAAoBA,GAApB,OACR,UAACD,EAAD,YACI,0BAAI,WAASW,MACb,yBAAG,IAAEC,OAFQX,EADT,QAU/B,C,kMC9BYY,EAAO,kBCIb,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACoBC,EAAAA,EAAAA,GAAM,oBAD1B,cACGC,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlB,GAA/B,wFACoBc,EAAAA,EAAAA,GAAM,SAAD,OAAUd,GAAM,CACxCmB,OACA,CACIC,SAAUR,EACVS,KAAM,KALX,cACGN,EADH,yBAQIA,EAASC,MARb,kEAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,wFACoBc,EAAAA,EAAAA,GAAM,SAAD,OACfd,EADe,YACD,CACvBmB,OACA,CACIC,SAAUR,KALf,cACGG,EADH,yBASIA,EAASC,KAAKO,MATlB,kEAYA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BN,GAA9B,wFACoBc,EAAAA,EAAAA,GAAM,SAAD,OACfd,EADe,YACD,CACvBmB,OACA,CACIC,SAAUR,EACVS,KAAM,KANX,cACGN,EADH,yBAUIA,EAASC,KAAKC,SAVlB,kEAaA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,wFACoBX,EAAAA,EAAAA,GAAM,iBACP,CAClBK,OACA,CACIO,MAAOD,EACPJ,KAAM,KANX,cACGN,EADH,yBAUIA,EAASC,KAAKC,SAVlB,kEA5CPH,EAAAA,EAAAA,SAAAA,QDFwB,gCCGxBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBDJqB,sN","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/constans.js","components/services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewWrap= styled.div`\n    display: block;\n`;\n\nexport const ReviewUL= styled.ul`\n    list-style: none;\n    padding: 0;`;\n\nexport const ReviewText= styled.li`\n    margin-bottom: 10px;\n    padding: 5px 5px;\n    border: 1px solid #e0e0e0;\n    border-radius: 15px;\n    `;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { getReviewMovie } from 'components/services/api';\n\nimport {ReviewText, ReviewUL, ReviewWrap} from './Reviews.styled';\n\nfunction Reviews() {\n    const { id } = useParams();\n    const [review, setReview] = useState(null);\n    useEffect(() => {\n        getReviewMovie(id)?.then(setReview);\n    }, [id, review?.length]);\n\n    return (\n        <ReviewWrap>\n            <hr />\n            {/* <h3>Reviews:</h3> */}\n            <ReviewUL>\n                {review?.length === 0 ? (\n                    <p>We don't have any reviews for this movies</p>\n                ) : (\n                    review?.map(({ author, content, id }) => (\n                        <ReviewText key={id}>\n                            <h3>Author: {author}</h3>\n                            <p> {content}</p>\n                        </ReviewText>\n                    ))\n                )}\n            </ReviewUL>\n        </ReviewWrap>\n    );\n}\n\nReviews.propTypes = {\n    width: PropTypes.number,\n    url: PropTypes.string,\n    name: PropTypes.string,\n};\n\nexport default Reviews;","export const API_KEY = \"6f49739e10a57a9bf024e4cbda7bdd20\";\nexport const TOKEN = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZjQ5NzM5ZTEwYTU3YTliZjAyNGU0Y2JkYTdiZGQyMCIsInN1YiI6IjY0NmNhNDFkMzNhMzc2MDExZWM1NzZiYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.l7wd1ErHz9MLKun2tiW2sFEdmte5xSXYfQzmnx_8WvI\"\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const LANG = '&language=en-US';","import axios from 'axios';\nimport { BASE_URL, LANG, TOKEN } from './constans';\n\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.common['Authorization'] = `Bearer ${TOKEN}`;\n\nexport async function getTrendsMovies() {\n    const response = await axios(`trending/all/day`);\n    return response.data.results;\n}\n\nexport async function getDetailsMovie(id) {\n    const response = await axios(`movie/${id}`, {\n        params:\n        {\n            language: LANG,\n            page: 1,\n        }\n    });\n    return response.data;\n}\n\nexport async function getCreditsMovie(id) {\n    const response = await axios(\n        `movie/${id}/credits`, {\n        params:\n        {\n            language: LANG,\n        }\n    }\n    );\n    return response.data.cast;\n}\n\nexport async function getReviewMovie(id) {\n    const response = await axios(\n        `movie/${id}/reviews`, {\n        params:\n        {\n            language: LANG,\n            page: 1,\n        }\n    }\n    );\n    return response.data.results;\n}\n\nexport async function getMovies(q) {\n    const response = await axios(\n        `search/keyword`, {\n        params:\n        {\n            query: q,\n            page: 1,\n        }\n    }\n    );\n    return response.data.results;\n}\n// -url 'https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1'\n// 'https://api.themoviedb.org/3/search/keyword?query=batman&page=1"],"names":["ReviewWrap","styled","ReviewUL","ReviewText","id","useParams","useState","review","setReview","useEffect","getReviewMovie","then","length","map","author","content","LANG","getTrendsMovies","axios","response","data","results","getDetailsMovie","params","language","page","getCreditsMovie","cast","getMovies","q","query"],"sourceRoot":""}